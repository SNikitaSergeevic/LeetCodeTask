def findCircleNum(isConnected: list[list[int]]) -> int:
    max_prov = 1

    for i, _ in enumerate(isConnected) :
        if sum(isConnected[i]) == 1 :
            max_prov += 1
        else :
            # check and get count of link

    return max_prov if max_prov < len(isConnected) else len(isConnected)
    
    


    return res



          
case1 = [[1,1,0],
         [1,1,0],
         [0,0,1]]

case2 = [[1,0,0],
         [0,1,0],
         [0,0,1]]

case3 = [[1,1,0,0,0,0,0,1,0,0,0,0,0,0,0],
         [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
         [0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
         [0,0,0,1,0,1,1,0,0,0,0,0,0,0,0],
         [0,0,0,0,1,0,0,0,0,1,1,0,0,0,0],
         [0,0,0,1,0,1,0,0,0,0,1,0,0,0,0],
         [0,0,0,1,0,0,1,0,1,0,0,0,0,1,0],
         [1,0,0,0,0,0,0,1,1,0,0,0,0,0,0],
         [0,0,0,0,0,0,1,1,1,0,0,0,0,1,0],
         [0,0,0,0,1,0,0,0,0,1,0,1,0,0,1],
         [0,0,0,0,1,1,0,0,0,0,1,1,0,0,0],
         [0,0,0,0,0,0,0,0,0,1,1,1,0,0,0],
         [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
         [0,0,0,0,0,0,1,0,1,0,0,0,0,1,0],
         [0,0,0,0,0,0,0,0,0,1,0,0,0,0,1]]

case4 = [[1,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
         [0,1,0,1,0,0,0,0,0,0,0,0,0,1,0],
         [0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
         [0,1,0,1,0,0,0,1,0,0,0,1,0,0,0],
         [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0],
         [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
         [0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
         [0,0,0,1,0,0,0,1,1,0,0,0,0,0,0],
         [0,0,0,0,0,0,0,1,1,0,0,0,0,0,0],
         [1,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
         [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
         [0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],
         [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0],
         [0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]]

print('=========case1=========')
print(findCircleNum(case1)) # 2
print('=========case2=========')
print(findCircleNum(case2)) # 3
print('=========case3=========')
print(findCircleNum(case3)) # 3
print('=========case4=========')
print(findCircleNum(case4)) # 8
